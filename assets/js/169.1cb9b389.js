(window.webpackJsonp=window.webpackJsonp||[]).push([[169],{701:function(s,t,a){"use strict";a.r(t);var n=a(60),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"为什么需要区分环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要区分环境"}},[s._v("#")]),s._v(" 为什么需要区分环境")]),s._v(" "),a("p",[s._v("在开发网页的时候，一般都会有多套运行环境，例如：")]),s._v(" "),a("ol",[a("li",[s._v("在开发过程中方便开发调试的环境；")]),s._v(" "),a("li",[s._v("发布到线上给用户使用的运行环境。")])]),s._v(" "),a("p",[s._v("这两套不同的环境虽然都是由同一套源代码编译而来，但是代码内容却不一样，其差异包括：")]),s._v(" "),a("ul",[a("li",[s._v("线上代码被通过压缩代码中提到的方法压缩了；")]),s._v(" "),a("li",[s._v("开发用的代码包含一些用于提示开发者的日志，普通用户不可能去看这些日志；")]),s._v(" "),a("li",[s._v("开发用的代码所连接的后端数据接口地址也可能和线上环境不同，因为要避免在开发过程中造成对线上数据的影响。")])]),s._v(" "),a("p",[s._v("为了尽可能复用代码，在构建的过程中需要根据目标代码要运行的环境输出不同的代码，我们需要一套机制在源码中去区分环境。幸运的是，"),a("code",[s._v("Webpack")]),s._v("已经为我们实现了这一点。")]),s._v(" "),a("h2",{attrs:{id:"cross-env"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cross-env"}},[s._v("#")]),s._v(" cross-env")]),s._v(" "),a("p",[s._v("通过Node中的process对象中的env属性来设置一个环境变量NODE_ENV来区分当前webpack环境。但是不同电脑上设置的方式是不一样的，cross-env可以跨平台设置环境和使用环境变量，解决了windows环境下的问题。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("yarn")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" cross-env -D\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("在package.json里配置：")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"build"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cross-env NODE_ENV=production webpack"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"dev"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cross-env NODE_ENV=development webpack-dev-server"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"webpack-merge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack-merge"}},[s._v("#")]),s._v(" webpack-merge")]),s._v(" "),a("p",[s._v("设置好环境变量之后，还需要将Webpack配置进行拆分，先在根目录下新建一个build目录，新建如下几个文件：")]),s._v(" "),a("ul",[a("li",[s._v("webpack.config.common.js：公共配置；")]),s._v(" "),a("li",[s._v("webpack.config.dev.js：开发环境配置；")]),s._v(" "),a("li",[s._v("webpack.config.prod.js：生产环境配置。")])]),s._v(" "),a("p",[s._v("使用webapck-merge插件，对配置进行合并使用。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("yarn")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" webpack-merge -D\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("修改package.json里的配置：")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"build"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cross-env NODE_ENV=production webpack --config ./build/webpack.config.prod.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"dev"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cross-env NODE_ENV=development webpack-dev-server --config ./build.\\yanrwebpack.config.dev.js"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"如何区分环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何区分环境"}},[s._v("#")]),s._v(" 如何区分环境")]),s._v(" "),a("p",[s._v("具体区分方法很简单，在源码中通过如下方式：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NODE_ENV")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'production'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'你正在线上环境'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'你正在使用开发环境'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("其大概原理是通过环境变量的值去判断执行哪个分支。")]),s._v(" "),a("p",[s._v("当代码中出现了使用"),a("code",[s._v("process")]),s._v("模块的语句时，"),a("code",[s._v("Webpack")]),s._v("就会自动打包进"),a("code",[s._v("process")]),s._v("模块的代码以支持非"),a("code",[s._v("Node.js")]),s._v("的运行环境。当代码中没有使用"),a("code",[s._v("process")]),s._v("时就不会打包进 "),a("code",[s._v("process")]),s._v("模块的代码。这个注入的"),a("code",[s._v("process")]),s._v("模块作用是为了模拟"),a("code",[s._v("Node.js")]),s._v("中的 "),a("code",[s._v("process")]),s._v("，以支持上面使用的"),a("code",[s._v("process.env.NODE_ENV === 'production'")]),s._v("语句。")]),s._v(" "),a("p",[s._v("在构建线上环境代码时，需要给当前运行环境设置环境变量"),a("code",[s._v("NODE_ENV = 'production'")]),s._v("，"),a("code",[s._v("Webpack")]),s._v("相关配置如下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" DefinePlugin "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'DefinePlugin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("plugins")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DefinePlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定义 NODE_ENV 环境变量为 production")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v("'process.env'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NODE_ENV")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("stringify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'production'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("blockquote",[a("p",[s._v("注意：在定义环境变量的值时用"),a("code",[s._v("JSON.stringify")]),s._v("包裹字符串的原因是，环境变量的值需要是一个由"),a("strong",[s._v("双引号包裹")]),s._v("的字符串，而"),a("code",[s._v("JSON.stringify('production')")]),s._v("的值正好等于"),a("code",[s._v("'\"production\"'")]),s._v("。")])]),s._v(" "),a("p",[s._v("执行构建后，你会在输出的文件中发现如下代码：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'你正在使用线上环境'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'你正在使用开发环境'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("code",[s._v("Webpack")]),s._v("定义的环境变量的值被代入到了源码中，"),a("code",[s._v("process.env.NODE_ENV === 'production'")]),s._v("被直接替换成了"),a("code",[s._v("true")]),s._v("。并且由于此时访问"),a("code",[s._v("process")]),s._v("的语句被替换且不存在了，"),a("code",[s._v("Webpack")]),s._v("也不会将"),a("code",[s._v("process")]),s._v("模块包含到输出文件中了。")]),s._v(" "),a("p",[a("code",[s._v("DefinePlugin")]),s._v("定义的环境变量只对"),a("code",[s._v("Webpack")]),s._v("需要处理的代码有效，而不会影响 "),a("code",[s._v("Node.js")]),s._v("运行时的环境变量的值。")]),s._v(" "),a("p",[s._v("通过"),a("code",[s._v("Shell")]),s._v("脚本的方式定义的环境变量，例如"),a("code",[s._v("NODE_ENV = production")]),s._v("，"),a("code",[s._v("Webpack")]),s._v(" 是不认识的，对"),a("code",[s._v("Webpack")]),s._v("需要处理的代码中的环境区分语句是没有作用的。")]),s._v(" "),a("p",[s._v("也就是说，只需要通过"),a("code",[s._v("DefinePlugin")]),s._v("定义环境变量，就能使上面介绍的环境区分语句正常工作，没必要再次通过"),a("code",[s._v("Shell")]),s._v("脚本的方式定义一遍。")]),s._v(" "),a("p",[s._v("如果你想让"),a("code",[s._v("Webpack")]),s._v("使用通过"),a("code",[s._v("Shell")]),s._v("脚本的方式定义的环境变量，可以使用 "),a("code",[s._v("EnvironmentPlugin")]),s._v("，代码如下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("webpack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("EnvironmentPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'NODE_ENV'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 以上这句代码实际上等价于：")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("webpack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("DefinePlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v("'process.env.NODE_ENV'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("stringify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NODE_ENV")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"结合uglifyjs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结合uglifyjs"}},[s._v("#")]),s._v(" 结合UglifyJS")]),s._v(" "),a("p",[s._v("其实以上输出的代码还可以进一步优化，因为"),a("code",[s._v("if(true)")]),s._v("语句永远只会执行前一个分支中的代码，也就是说最佳的输出应该直接是：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'你正在线上环境'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("code",[s._v("Webpack")]),s._v("没有实现去除死代码的功能，但是"),a("code",[s._v("UglifyJS")]),s._v("可以做这个事情，如何使用请阅读 压缩代码中的压缩"),a("code",[s._v("JavaScript")]),s._v("相关内容。")]),s._v(" "),a("h2",{attrs:{id:"第三方库中的环境区分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三方库中的环境区分"}},[s._v("#")]),s._v(" 第三方库中的环境区分")]),s._v(" "),a("p",[s._v("除了在自己写的源码中可以有环境区分的代码，很多第三方库也做了环境区分的优化。以React为例，它做了两套环境区分，分别是：")]),s._v(" "),a("ol",[a("li",[s._v("开发环境：包含类型检查、HTML元素检查等针对开发者的警告日志代码；")]),s._v(" "),a("li",[s._v("线上环境：去掉了所有针对开发者的代码，只保留让React能正常运行的部分，以优化大小和性能。")])]),s._v(" "),a("blockquote",[a("p",[s._v("例如"),a("code",[s._v("React")]),s._v("源码中有大量类似下面这样的代码：")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NODE_ENV")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'production'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("warning")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%s(...): Can only update a mounted or mounting component.... '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("如果你不定义"),a("code",[s._v("NODE_ENV=production")]),s._v("，那么这些警告日志就会被包含到输出的代码中，输出的文件将会非常大。")]),s._v(" "),a("p",[a("code",[s._v("process.env.NODE_ENV !== 'production'")]),s._v("中的"),a("code",[s._v("NODE_ENV")]),s._v("和"),a("code",[s._v("'production'")]),s._v(" 两个值是社区的约定，通常使用这条判断语句在区分开发环境和线上环境。")])])}),[],!1,null,null,null);t.default=e.exports}}]);