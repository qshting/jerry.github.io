(window.webpackJsonp=window.webpackJsonp||[]).push([[144],{669:function(s,e,t){"use strict";t.r(e);var a=t(60),r=Object(a.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("[TOC]")]),s._v(" "),t("p",[s._v("在开发阶段，修改源码是不可避免的操作。对于开发网页来说，要想看到修改后的效果，就需要刷新浏览器让其重新运行最新的代码。虽然这相比于开发原生iOS和Android应用来说要方便很多，因为那需要重新编译这个项目再运行，但我们可以将这个体验优化得更好。 借助自动化的手段，可以将这些重复的操作交给代码去帮我们完成，在监听到本地源码文件发生变化时，自动重新构建出可运行的代码后再控制浏览器刷新。")]),s._v(" "),t("p",[t("code",[s._v("Webpack")]),s._v("将这些功能都内置了，并且提供了多种方案供我们选择。")]),s._v(" "),t("h2",{attrs:{id:"文件监听"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件监听"}},[s._v("#")]),s._v(" 文件监听")]),s._v(" "),t("p",[s._v("文件监听是在发现源码文件发生变化时，自动重新构建出新的输出文件。")]),s._v(" "),t("p",[t("code",[s._v("Webpack")]),s._v("官方提供了两大模块，一个是核心的"),t("code",[s._v("webpack")]),s._v("；另一个是"),t("code",[s._v("webpack-dev-server")]),s._v("。文件监听功能是"),t("code",[s._v("webpack")]),s._v("提供的。")]),s._v(" "),t("p",[t("code",[s._v("Webpack")]),s._v("支持文件监听相关的配置项：")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只有在开启监听模式时，watchOptions才有意义")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 默认为false，也就是不开启")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("watch")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 监听模式运行时的参数")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在开启监听模式时才有意义")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("watchOptions")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不监听的文件或文件夹，支持正则匹配")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 默认为空")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("ignored")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("node_modules")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 监听到变化发生后等300ms再去执行动作，截流")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 防止文件更新太快而导致重新编译频率太快。默认为300ms")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("aggregateTimeout")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 判断文件是否发生变化是通过不停地询问系统指定文件有没有变化实现的")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 默认每秒询问1000次")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("poll")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("p",[t("code",[s._v("Webpack")]),s._v("开启监听模式有以下两种方式：")]),s._v(" "),t("ol",[t("li",[s._v("在配置文件"),t("code",[s._v("webpack.config.js")]),s._v("中设置"),t("code",[s._v("watch: true")]),s._v("；")]),s._v(" "),t("li",[s._v("在执行启动"),t("code",[s._v("webpack")]),s._v("的命令时带上"),t("code",[s._v("--watch")]),s._v("参数，完整命令为"),t("code",[s._v("webpack --watch")]),s._v("或者"),t("code",[s._v("webpack -w")]),s._v("。")])]),s._v(" "),t("h3",{attrs:{id:"文件监听的工作原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件监听的工作原理"}},[s._v("#")]),s._v(" 文件监听的工作原理")]),s._v(" "),t("p",[s._v("在"),t("code",[s._v("Webpack")]),s._v("中监听一个文件发生变化的原理是：定时获取这个文件的最后编辑时间，每次都存下最新的最后编辑时间，如果发现当前获取的和最后一次保存的最后编辑时间不一致，就认为该文件发生了变化。配置项中的"),t("code",[s._v("watchOptions.poll")]),s._v("用于控制定时检查的周期(具体含义是每秒检查多少次)。")]),s._v(" "),t("p",[s._v("当发现某个文件发生了变化时，并不会立刻告诉监听者，而是先缓存起来，收集一段时间的变化后，再一次性告诉监听者。配置项中的"),t("code",[s._v("watchOptions.aggregateTimeout")]),s._v("用于配置这个等待时间。这样做的目的在于：我们在编辑代码的过程中可能会高频地输入文字，导致文件变化的事件高频地发生，如果每次都重新执行构建，就会让构建卡死。")]),s._v(" "),t("p",[s._v("对于多个文件来说，其原理相似，"),t("code",[s._v("Webpack")]),s._v("会对列表中的每个文件都定时执行检查。但是怎么确定这个需要监听的文件列表呢？在默认情况下，"),t("code",[s._v("Webpack")]),s._v("会从配置的"),t("code",[s._v("Entry")]),s._v("文件出发，递归解析出"),t("code",[s._v("Entry")]),s._v("文件所依赖的文件，将这些依赖的文件都加入监听列表中。而不是粗暴地直接监听项目目录下的所有文件。")]),s._v(" "),t("p",[s._v("需要注意的：由于保存文件的路径和最后的编辑时间需要占用内存，定时检查周期检查需要占用CPU及文件I/O，所以最好减少需要监听的文件数量和降低检查频率。")]),s._v(" "),t("h3",{attrs:{id:"优化文件监听的性能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优化文件监听的性能"}},[s._v("#")]),s._v(" 优化文件监听的性能")]),s._v(" "),t("p",[s._v("在开启监听模式后，默认情况下会监听配置的Entry文件和所有Entry递归依赖的文件。在这些文件中会有很多存在于"),t("code",[s._v("node_modules")]),s._v("下，因为现如今的项目会依赖大量的第三方模块。但是，在大多数情况下，我们不可能去编辑"),t("code",[s._v("node_modules")]),s._v("下的文件，而只是编辑自己的项目文件。")]),s._v(" "),t("p",[s._v("方法一：忽略"),t("code",[s._v("node_modules")]),s._v("下的文件，不监听它们。采用这种方法优化后，"),t("code",[s._v("Webpack")]),s._v("消耗的内存和"),t("code",[s._v("CPU")]),s._v("将会大大减少。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("watch")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("watchOptions")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不监听node_modules目录下的文件")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("ignored")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("node_modules")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("方法二："),t("code",[s._v("watchOptions.aggregateTimeout")]),s._v("的值越大性能越好，因为这能降低重新构建的频率。\n方法三："),t("code",[s._v("watchOptions.poll")]),s._v("的值越小越好，因为这能降低检查的频率。")]),s._v(" "),t("p",[s._v("但是后两种优化方法会导致监听模式的反应和灵敏度降低。")]),s._v(" "),t("h2",{attrs:{id:"自动刷新浏览器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自动刷新浏览器"}},[s._v("#")]),s._v(" 自动刷新浏览器")]),s._v(" "),t("p",[s._v("监听到文件更新后的下一步是刷新浏览器，"),t("code",[s._v("Webpack")]),s._v("模块负责监听文件，"),t("code",[s._v("webpack-dev-server")]),s._v("模块负责刷新浏览器。在使用"),t("code",[s._v("webpack-dev-serve")]),s._v("模块去启动"),t("code",[s._v("webpack")]),s._v("模块时，"),t("code",[s._v("webpack")]),s._v("模块的监听模式默认会被开启。"),t("code",[s._v("webpack")]),s._v("模块会在文件发生变化时通知"),t("code",[s._v("webpack-dev-server")]),s._v("模块。")]),s._v(" "),t("h3",{attrs:{id:"自动刷新的原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自动刷新的原理"}},[s._v("#")]),s._v(" 自动刷新的原理")]),s._v(" "),t("p",[s._v("控制浏览器刷新有如下三种方法：")]),s._v(" "),t("ol",[t("li",[s._v("借助浏览器扩展去通过浏览器提供的接口刷新，"),t("code",[s._v("WebStorm IDE")]),s._v("的"),t("code",[s._v("LiveEdit")]),s._v("功能就是这样实现的；")]),s._v(" "),t("li",[s._v("向要开发的网页中注入代理客户端代码，通过代理客户端去刷新整个页面；")]),s._v(" "),t("li",[s._v("将要开发的网页装进一个iframe中，通过刷新iframe去看到最新效果。\n"),t("code",[s._v("webpack-dev-server")]),s._v("模块支持第二、三种方法，其中第二种是"),t("code",[s._v("webpack-dev-server")]),s._v("模块默认采用的刷新方法。")])]),s._v(" "),t("h3",{attrs:{id:"优化自动刷新的性能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优化自动刷新的性能"}},[s._v("#")]),s._v(" 优化自动刷新的性能")]),s._v(" "),t("p",[t("code",[s._v("devServer.inline")]),s._v("配置项用来控制是否向"),t("code",[s._v("Chunk")]),s._v("中注入代理客户端，默认会注入。事实上，在开启"),t("code",[s._v("inline")]),s._v("时，"),t("code",[s._v("DevServer")]),s._v("会向每个输出的"),t("code",[s._v("Chunk")]),s._v("中注入代理客户端的代码，当我们的项目需要输出很多"),t("code",[s._v("Chunk")]),s._v("时，就会导致构建缓慢。其实要完成自动刷新，一个页面只需要一个代理客户端，"),t("code",[s._v("DevServer")]),s._v("之所以粗暴地为每个"),t("code",[s._v("Chunk")]),s._v("都注入，是因为它不知道某个网页依赖哪几个"),t("code",[s._v("Chunk")]),s._v("，索性全部都注入一个代理客户端。网页只要依赖了其中任何一个"),t("code",[s._v("Chunk")]),s._v("，代理客户端就被注入网页中。")]),s._v(" "),t("p",[s._v("优化思路：关闭"),t("code",[s._v("inline")]),s._v("模式，只注入一个代理客户端。关闭方式有两种：")]),s._v(" "),t("ol",[t("li",[t("code",[s._v("webpack-dev-server --inline false")]),s._v("；")]),s._v(" "),t("li",[s._v("在配置文件中设置："),t("code",[s._v("inline: false")]),s._v("。")])]),s._v(" "),t("p",[s._v("和前面的不同在于：")]),s._v(" "),t("ol",[t("li",[s._v("入口网址变成了"),t("code",[s._v("http://localhost:8080/webpack-dev-server/")]),s._v("；")]),s._v(" "),t("li",[s._v("打包后的bundle.js中不再包含代理客户端的代码。")])]),s._v(" "),t("p",[s._v("在浏览器中打开网址"),t("code",[s._v("http://localhost:8080/webpack-dev-server/")]),s._v("后，发现：要开发的网页被放进了一个"),t("code",[s._v("iframe")]),s._v("中，编辑源码后，"),t("code",[s._v("iframe")]),s._v("会被自动刷新。同时我们会发现构建的时间从"),t("code",[s._v("1566ms")]),s._v("减少到了"),t("code",[s._v("1130ms")]),s._v("，说明优化生效了。要输出的"),t("code",[s._v("Chunk")]),s._v("数量越多，构建性能提升的效果越明显。")]),s._v(" "),t("p",[s._v("在关闭"),t("code",[s._v("inline")]),s._v("后，"),t("code",[s._v("DevServer")]),s._v("会自动提示通过新网址"),t("code",[s._v("http://localhost:8080/webpack-dev-server/")]),s._v("去访问，这一点做得很人性化。")]),s._v(" "),t("p",[s._v("如果不想以"),t("code",[s._v("iframe")]),s._v("的方式去访问，但同时想让网页保持自动刷新的功能，则需要手动向网页中注入代理客户端的脚本，向"),t("code",[s._v("index.html")]),s._v("中插入以下标签：")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("注入DevServer提供的代理客户端脚本，这个服务是DevServer内置的"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("script src"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://localhost:8080/webpack-dev-server.js"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("script"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("向网页注入以上脚本后，独立打开的网页就能自动刷新了。但是在发布到线上时要删掉这段用于开发环境的代码。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("watch")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("watchOptions")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("ignored")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("node_modules")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("aggregateTimeout")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("poll")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("img",{attrs:{src:s.$withBase("/webpack/fresh.png"),alt:""}}),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("devServer")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("historyApiFallback")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//不跳转")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// inline: true, //实时刷新,")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("compress")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("overlay")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在浏览器页面上显示错误")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("open")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 自动打开浏览器")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("hot")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("img",{attrs:{src:s.$withBase("/webpack/fresh2.png"),alt:""}}),s._v(" "),t("p",[s._v("如上图所示：当在"),t("code",[s._v("devServer")]),s._v("中配置"),t("code",[s._v("overlay: true")]),s._v("时，将会在页面上显示webpack编译错误的信息。")]),s._v(" "),t("h2",{attrs:{id:"参考文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[s._v("#")]),s._v(" 参考文档")]),s._v(" "),t("ol",[t("li",[t("a",{attrs:{href:"https://whjin.github.io/full-stack-development/posts/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%20Webpack/%E4%BD%BF%E7%94%A8%E8%87%AA%E5%8A%A8%E5%88%B7%E6%96%B0.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("使用自动刷新"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=r.exports}}]);