(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{660:function(t,a,s){"use strict";s.r(a);var e=s(60),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("[TOC]")]),t._v(" "),s("p",[t._v("首先都听说过一道经典的面试题：从在浏览器中输入url到页面呈现，这中间都发生了什么？")]),t._v(" "),s("ol",[s("li",[t._v("HTTP请求阶段")]),t._v(" "),s("li",[t._v("HTTP响应阶段")]),t._v(" "),s("li",[t._v("浏览器渲染阶段")])]),t._v(" "),s("h2",{attrs:{id:"相关概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相关概念"}},[t._v("#")]),t._v(" 相关概念")]),t._v(" "),s("h3",{attrs:{id:"gpu"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gpu"}},[t._v("#")]),t._v(" GPU")]),t._v(" "),s("p",[t._v("显卡处理器称为图形处理器(即 GPU)，它是显卡的“心脏”，与CPU类似，只不过GPU是专门为执行复杂的数学和几何计算而设计的，这些计算是图形渲染所必需的。一些最快速的GPU集成的晶体管数甚至超过了普通CPU。")]),t._v(" "),s("h2",{attrs:{id:"进程-process-和线程-thread"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进程-process-和线程-thread"}},[t._v("#")]),t._v(" 进程(Process)和线程(Thread)")]),t._v(" "),s("p",[t._v("每打开一个应用程序就相当于开启了一个进程，在一个进程中可以同时做好多事情，每一件事情又可以称为一个线程。简单来说，进程就是一个应用程序，线程是干活的。")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("// 声明文档类型为html\n// DOCTYPE就是document type\n"),s("span",{pre:!0,attrs:{class:"token doctype"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<!")]),s("span",{pre:!0,attrs:{class:"token doctype-tag"}},[t._v("DOCTYPE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token name"}},[t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("需要注意："),s("strong",[t._v("js是单线程的，浏览器是多线程的")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"gpu-显卡-用来绘制页面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gpu-显卡-用来绘制页面"}},[t._v("#")]),t._v(" GPU(显卡)-用来绘制页面")]),t._v(" "),s("h2",{attrs:{id:"浏览器渲染机制和原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染机制和原理"}},[t._v("#")]),t._v(" 浏览器渲染机制和原理")]),t._v(" "),s("ol",[s("li",[t._v("解析HTML生成DOM树，解析CSS生成CSSOM树")]),t._v(" "),s("li",[t._v("将DOM树和CSSOM树结合，生成渲染树(render Tree)")]),t._v(" "),s("li",[t._v("Layout(回流)：根据生成的渲染树，计算它们在设备视口(viewport)中的确切位置和大小，这个计算阶段就是回流")]),t._v(" "),s("li",[t._v("Painting(重绘)：根据渲染树以及回流得到的几何信息，得到节点的绝对像素")]),t._v(" "),s("li",[t._v("Display：将像素发送给GPU，展示在页面上。")])]),t._v(" "),s("p",[t._v("需要注意：浏览器第一次渲染，回流肯定在重绘之前。回流一定会导致重绘，重绘不一定导致回流。")]),t._v(" "),s("h2",{attrs:{id:"性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[t._v("#")]),t._v(" 性能优化")]),t._v(" "),s("ol",[s("li",[t._v("减少http请求次数和大小\n"),s("ol",[s("li",[t._v("资源合并压缩(雪碧图)")]),t._v(" "),s("li",[t._v("图片懒加载")]),t._v(" "),s("li",[t._v("音视频走流文件(m3u8)")])])]),t._v(" "),s("li",[t._v("DNS缓存")]),t._v(" "),s("li",[t._v("304缓存")]),t._v(" "),s("li",[t._v("尽量的避免重绘和回流")])])])}),[],!1,null,null,null);a.default=r.exports}}]);